#                                                           Проверка ДЗ(интересные альтернативные решения)
# Напишите программу, которая принимает на вход цифру, обозначающую день недели, и проверяет, является ли этот день выходным.

# num=int(input('Write day of week '))
# if num in(6,7):
#     print('hollydays')
# elif num in (1,2,3,4,5):
#     print('work day')
# else:
#     print('try agaim')

# Напишите программу для. проверки истинности утверждения ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z для всех значений предикат.
# ⋀-and
# ⋁-or
# ¬-not

# for x in[True,False]:
#     for y in [True, False]:
#         for z in [True, False]:
#             print(f'x={x} y={y} z={z}', end='->')
#             print( not(x and y and z)==(not x) or (not y) or (not z))
# #                 result='Верно'
# #             else:
# #                 result='Ложно'
# # print(result)

#                                                                   ЗАДАЧИ С СЕМИНАРА

#                               ЗАДАЧА 1.Напишите программу, которая принимает число N и выдает последовательность из N членов
#                               Пример: N=5->1, -3, 9, 27, -81

#           ПРИМЕР для РАНДОМНЫХ ЧИСЕЛ
# import random # загружаем библиотеку рандома
# number=int(input('Write number: '))
# print(f'Введеное число:', number)

# for i in range(number):
#     print(random.randint(-10,10), end= ' ') # random.randint(-10,10)- вызов рандома для рандомного int значения в диапозоне -10, 10// end =' ' делает в одну строку

#           ПРИМЕР ПО УСЛОВИЮ
# n=int(input('write n: '))
# symbol=1
# for i in range(n):
#     print(symbol, end= ' ')
#     symbol*=-3


#                               ЗАДАЧА 2. Для натурального n создать словарь индекс-значение, состоящий из элементов последовательности 3*n + 1
#                               Пример: n=3: {1:4,2:7,3:17}

# n=int(input('Write number: '))
# my_dict={} # my_dict={}- так создается словарь
# for i in range(1,n+1):
#     my_dict[i]=3*i+1
# print(my_dict)


#                               ЗАДАЧА 13. Напишите программу, в которой пользователь будет задавать 2 строки, 
#                               а программа будет определять количество вхождений одной строки в другой.
#Пример: Строка: Привет., Подстрока: рв., Количество вхождений: 2

# text=input('введиет первую строку: ')
# find_text=input('Введите строку поиска: ')
# print(f'Количество вхождений: {text.count(find_text)}')# count-медот который ищет совпадения(применяется к строке и списку)

#       АЛЬТЕРНАТИВНОЕ РЕШЕНИЕ
text=input('введиет первую строку: ')
find_text=input('Введите строку поиска: ')
for i in range(len(text)):
    if text[i:i+len(find_text)-1]: # что значит : см.лекция1
        print(i)
#                               ЗАДАЧА 14. Программа должна вывести n рядов, заполненных знаком '*' определенным образом.
#                               А именно в первом ряду должно быть n звездочек , во втором ряду n-1 и т.д
#***
#**
#*

# numbers=int(input('Введите число: '))
# for i in range(numbers,0,-1):
#     print('*'*i)


